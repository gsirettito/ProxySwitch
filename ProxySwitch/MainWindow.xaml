<Window x:Name="window" x:Class="ProxySwitch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProxySwitch"
        StateChanged="Window_StateChanged"
        mc:Ignorable="d"
        Title="ProxySwitcher" MinHeight="370" Height="450" Width="440" MinWidth="440" ResizeMode="NoResize">
    <Window.Resources>
        <ContextMenu x:Key="NotifierContextMenu"
                     Placement="MousePoint">
            <MenuItem Header="Open" Click="Menu_Open"/>
            <MenuItem Header="Enable" IsCheckable="True"/>
            <Separator/>
            <Separator/>
            <Separator/>
            <MenuItem Header="Close" Click="Menu_Close"/>
        </ContextMenu>
        <Style TargetType="TextBox">
            <Setter Property="BorderBrush" Value="#FFD7E4FF"/>
            <Setter Property="Background" Value="#FFFCFCFC"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="back" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="back" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="True">
                            <ContentControl x:Name="content" Content="{TemplateBinding Content}"
                                            Foreground="#FF3B3B3B" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="Background" Value="#FFE5EBFF"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFB0C1E2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="back" Property="Background" Value="White"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFB0C1E2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="content" Property="Foreground" Value="#FFA8AEC3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Hyperlink}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="#FFF9C430"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FFA8AEC3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Padding" Value="4 1"/>
            <Setter Property="Margin" Value="1 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="back" Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <ContentControl x:Name="content" Content="{TemplateBinding Content}"  Foreground="#FF3B3B3B" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="back" Property="Background" Value="#FFFFEDC8"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFD2A85E"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="Background" Value="#FFE5EBFF"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFB0C1E2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="back" Property="Background" Value="White"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFB0C1E2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="content" Property="Foreground" Value="#FFA8AEC3"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsChecked" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="back" Property="Background" Value="#FFFFF8DF"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFD2A85E"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel>
            <ToolBar DockPanel.Dock="Top">
                <ToggleButton x:Name="enable"
                              Unchecked="enable_Checked"
                              Checked="enable_Checked"
                              Style="{StaticResource ToolBarToggleButton}">Enable</ToggleButton>
                <ToggleButton x:Name="autorun"
                              Unchecked="autorun_Checked"
                              Checked="autorun_Checked"
                              Style="{StaticResource ToolBarToggleButton}">Autorun</ToggleButton>
            </ToolBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="200"/>
                    <ColumnDefinition Width="1.5"/>
                    <ColumnDefinition MinWidth="220" Width="220"/>
                </Grid.ColumnDefinitions>
                <GridSplitter Grid.Column="1" Grid.Row="1"/>
                <GroupBox Grid.Row="1" Header="Profiles" Margin="2">
                    <ListView x:Name="list" Grid.Row="1" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <RadioButton IsChecked="{Binding IsChecked}" GroupName="{Binding Title, ElementName=window}" Tag="{Binding Tag}">
                                        <StackPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}">
                                            <TextBlock Text="{Binding Tag.Label}"/>
                                            <TextBlock Foreground="DarkGray">
                                    <Run Text="{Binding Tag.Http}"/>:<Run Text="{Binding Tag.Port}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <RadioButton.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Active" Click="Mi_Checked"/>
                                                <MenuItem Header="Edit" Click="Edit_Checked"/>
                                                <MenuItem Header="Delete" Click="Delete_Click"/>
                                            </ContextMenu>
                                        </RadioButton.ContextMenu>
                                    </RadioButton>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </GroupBox>
                <StackPanel Grid.Column="2" Grid.Row="1" Margin="0,6,0,50">
                    <StackPanel Margin="5,10">
                        <Label>Label</Label>
                        <TextBox x:Name="label" Margin="5,0" MinHeight="25" MaxLines="1" MaxLength="16"/>
                        <Label>HTTP Proxy</Label>
                        <TextBox x:Name="proxy" Margin="5,0" MinHeight="25" MaxLines="1" MaxLength="50"/>
                        <Label>Port</Label>
                        <TextBox x:Name="port" Margin="5,0,5,5" Width="50" HorizontalAlignment="Left" MinHeight="25" MaxLines="1" MaxLength="7"/>
                        <Label>No proxy for</Label>
                        <TextBox x:Name="nproxy" Margin="5,0,5,5" MinHeight="50" VerticalContentAlignment="Stretch"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel   Orientation="Horizontal"  Margin="0,0,10,0">
                </StackPanel>
                <Button x:Name="begin"
                Grid.Column="2" Grid.Row="1"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Margin="10" IsDefault="True" Width="64" Click="add_Click">Add</Button>
            </Grid>
        </DockPanel>
        <TextBlock
            VerticalAlignment="Top" HorizontalAlignment="Right"
            Margin="12,0"
            FontSize="9" TextAlignment="Center">
                <Run>Created by: Guillermo Siret Tito</Run>
                <LineBreak/>
                <Hyperlink NavigateUri="mailto://guillermosiret@gmail.com">guillermosiret@gmail.com</Hyperlink>
        </TextBlock>
    </Grid>
</Window>
